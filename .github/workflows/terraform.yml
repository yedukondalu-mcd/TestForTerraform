name: 'Terraform'

on:
  push:
    branches:
    - main
  pull_request:
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v2


    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init

    # Checks that all Terraform configuration files adhere to a canonical format
   # - name: Terraform Format
  #   run: terraform fmt -check
    - name: Check list of files and present working directory
      run:  |
        ls
        pwd

#    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: cd /home/runner/work/TestForTerraform/TestForTerraform && terraform plan 

      # On push to main, build or change infrastructure according to Terraform configuration files
      # Note: It is recommended to set up a required "strict" status check in your repository for "Terraform Cloud". See the documentation on "strict" required status checks for more information: https://help.github.com/en/github/administering-a-repository/types-of-required-status-checks
    - name: Terraform Apply 
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: cd /home/runner/work/TestForTerraform/TestForTerraform && terraform apply -auto-approve
    - name: Terraform destroy after 5 minutes
      run: |
       sleep 5m
       ls
       pwd
     #  cd /home/runner/work/TestForTerraform/TestForTerraform && terraform destroy -auto-approve
       
  terraform-delete:
         name: 'Terraform-Delete'
         runs-on: ubuntu-latest
         needs: [terraform]
         env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          
          
         steps:
          # Checkout the repository to the GitHub Actions runner
         - name: Checkout
           uses: actions/checkout@v2

         - name : list of files and Present working directory
           run: |
             sleep 2m
             ls
             pwd
